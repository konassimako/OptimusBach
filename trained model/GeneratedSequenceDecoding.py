# This program reads the sequence that was generated by the trained model and shows the sheet music for that sequence.
# IMPORTANT NOTES!!
# 1) You need to have a music notation software installed in your computer.
#    MuseScore (https://musescore.org) is recommended, which is a free music notation software.
# 2) Please change the filepaths for the generatedSequence.pkl and decodingDictionary.pkl accordingly.
# 3) This program uses a function form the CreateSheetMusic.py file. You need them saved in the same folder.

import pickle
from CreateSheetMusic import generateSheetMusic


# This functions takes the melody and the generated harmonization as inputs (padded) and checks to see if they have
# the same duration.
def checkDuration(mel, har):
    nMel = 0
    nHar = 0
    for i in range(len(mel)):
        if mel[i] == 2:
            nMel += 1
        if har[i] == 2:
            nHar += 1
    if nMel == nHar:
        return True
    else:
        return False


# Let's load our generated music and split it into melody and harmonization

######## CHANGE THE FILEPATH OF THE GENERATED MUSIC HERE ########

with open("/filepath/generated_music.pkl", "rb") as f:
    generatedSequence = pickle.load(f)

################   
    
melody, harmonization = zip(*generatedSequence)
melody = list(melody)[0]
harmonization = list(harmonization)[0]
# Let's check if the melody and harmonization duration is the same
durationOK = checkDuration(melody, harmonization)
print(f"The piece duration is ok = {durationOK}")
# Let's load the decoding dictionary

######## CHANGE THE FILEPATH TO THE DECODING DICTIONARY HERE

with open("/filepath/decodingDictionary.pkl", "rb") as f:
    decDictionary = pickle.load(f)

################  
    
# Now let's decode the melody and the harmonization
decDictionary[120] = "PAD"
decodedMelody = []
decodedHarmonization = []
for i in range(len(melody)):
    decodedMelody.append(decDictionary[melody[i]])
    decodedHarmonization.append(decDictionary[harmonization[i]])
# Now we must create the sheet music from this
generateSheetMusic(decodedMelody, decodedHarmonization)
